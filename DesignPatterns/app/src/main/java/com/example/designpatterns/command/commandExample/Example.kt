package com.example.designpatterns.command.commandExample

/*
–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω "–ö–æ–º–∞–Ω–¥–∞" (Command Pattern),
—á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–ª–æ—Å—å —á–µ—Ä–µ–∑ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥.
–ü—É–ª—å—Ç (RemoteControl) –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏—Ö –≤ —Ñ–æ–Ω–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∏—Ö –≤ –ø–æ—Ä—è–¥–∫–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.
 */

class Light {
    fun turnOn() = println("üí° –°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω")
    fun turnOff() = println("üåë –°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω")
}

class TV {
    fun turnOn() = println("üì∫ –¢–µ–ª–µ–≤–∏–∑–æ—Ä –≤–∫–ª—é—á–µ–Ω")
    fun turnOff() = println("üì∫ –¢–µ–ª–µ–≤–∏–∑–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω")
    fun changeChannel(channel: Int) = println("üì∫ –ö–∞–Ω–∞–ª –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞ $channel")
}

class AirConditioner {
    fun turnOn() = println("‚ùÑÔ∏è –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –≤–∫–ª—é—á–µ–Ω")
    fun turnOff() = println("üî• –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω")
    fun setTemperature(temp: Int) = println("üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ $temp¬∞C")
}

fun runCommandTest() {
    val light = Light()
    val tv = TV()
    val ac = AirConditioner()

    light.turnOn()
    tv.turnOn()
    tv.changeChannel(5)
    ac.turnOn()
    ac.setTemperature(22)
    light.turnOff()
    tv.turnOff()
    ac.turnOff()
}